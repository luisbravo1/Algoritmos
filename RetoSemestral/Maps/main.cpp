//Luis Gerardo Bravo Ramones A01282014

#include <iostream>
#include <climits>
#include <vector>

using namespace std;

int inicio = 0, fin = 739, mitad;
int pivote = 0, aux, j;
int elemPivote;
int idx = 0;

void Particion(int inicio, int fin, int &pivote, int arreglo[740]) {
	elemPivote = arreglo[inicio];
	j = inicio;

	for(int i=inicio+1; i <= fin; i++) {
		if (arreglo[i] < elemPivote) {
			j++;
			//Intercambia arreglo[i] con arreglo[j]
			aux = arreglo[i];
			arreglo[i] = arreglo[j];
			arreglo[j] = aux;
		}
	}
	pivote = j;
	//Intercambia arreglo[inicio] con arreglo[pivote]
	aux = arreglo[inicio];
	arreglo[inicio] = arreglo[pivote];
	arreglo[pivote] = aux;
}

void QuickSort(int inicio, int fin, int arreglo[740]) {
	if (inicio < fin) {
		Particion(inicio, fin, pivote, arreglo);
		QuickSort(inicio, pivote-1, arreglo);
		QuickSort(pivote+1, fin, arreglo);
	}
}

void menorDist(int &prevMenor, int arreglo[740], vector<int> &a, vector<int> &b) {
	for(int i=0; i < fin-1; i++) {
		if ((arreglo[i+1] - arreglo[i]) < prevMenor) {
			idx = 0;
			prevMenor = (arreglo[i+1] - arreglo[i]);
			a[idx] = arreglo[i];
			b[idx] = arreglo[i+1];
			//cout << a << ", " << b << endl;
		} else if ((arreglo[i+1] - arreglo[i]) == prevMenor) {
			idx++;
			a[idx] = arreglo[i];
			b[idx] = arreglo[i+1];
		}
	}
}

int main() {

	int latitudes[740] = {4414, 2126, -8232, -5391, 6810, 6445, -6316, -564, 965,
	7895, -555, 3692, -8893, -7278, 349, 6463, -3858, -5132, 5138, 3850, 6614, 5821,
	6887, 3423, -5897, 2696, 8634, -8784, 6292, 6139, 2606, 6598, 7380, 1821, -5508,
	-2130, -6333, -2497, -7963, -2057, 2326, -5251, -2276, -4872, -1254, -252, -3223,
	-8946, -8881, 446, 4528, 2495, 5575, 5953, -5805, -4004, 2568, -7201, 259, 5372,
	2299, 8090, 1024, 720, 600, 7883, 6081, -267, -8551, 7863, -6211, -3214, 2017,
	7724, -7723, -5043, 8177, 93, -1854, -4044, -5198, -3574, -8756, 4600, 5270, 589,
	-215, -4291, 2174, 7304, 7670, -6255, -5395, -8922, -5244, 1608, 7352, 6276, -
	3770, 4450, 1540, -7777, -3147, -7533, 1095, -5766, 2139, 7143, -5732, -8385, -
	5922, 1621, -8970, 4064, 6203, -6798, 2698, 5199, 925, -1132, -2876, 744, -1436,
	5304, -7143, -4399, -2902, -2803, -3190, -4862, 8492, 1598, 1224, -1197, -3637, -
	1136, 7673, -5206, -3939, 1435, 5670, -6736, 3593, -8751, -7749, -1616, -4842, -
	8782, -2487, -5946, -2965, 1757, 3304, -4835, 3792, 6682, 1016, 4112, -7368,
	6759, -8126, 8230, -5611, -2465, 8025, -5691, -4393, -6397, -114, -8032, -3837,
	26, 2693, -8119, -2545, 4649, -7667, 1136, -7609, 4714, 1987, 4522, 937, 5260,
	4260, 6581, -8323, -2346, -3159, -5116, 4945, -3835, -8324, -900, 7039, 7757,
	5225, 8357, -6850, 630, -6415, -4942, 6728, -848, 7460, 2536, 692, 6686, 8558, -
	5742, 116, 6254, 565, 980, 3000, -6450, 8099, -544, 4638, -970, -3104, 8393, -
	8176, 4679, -4883, -4115, -2163, -927, 4305, -4789, -4007, 3088, -4850, 3578, -
	2491, -5464, -3937, -1088, 1109, 8645, 5444, 3901, -1874, 4343, -7454, 4362, -
	2696, 8064, -5487, 4214, 4230, 819, -350, 6503, -7864, -506, -6951, -7508, 6220,
	-3416, -2695, 5472, -381, -7574, 8397, -4734, 7657, -4506, -837, 3177, 1478, -
	5790, -8379, -6972, 6805, 5041, -6659, 5263, -2442, 4420, 4913, -681, -7124, -
	7108, -7980, 4139, -1749, 8707, -7363, 4847, 5646, 8074, 5735, -7902, -2730,
	5204, -6380, 7405, 982, 2985, 1461, -3685, -1771, 7373, -683, 6011, -3310, -3337,
	-576, 261, -2846, -3965, -936, 7585, -1732, 8280, -1316, -1466, 5999, 6621, 2805,
	1798, 4491, -2855, 6820, 1000, 4609, -1879, -2343, 3703, -1772, -806, -3579, -
	7221, -2482, -7273, 3246, 4766, 8889, -7863, -7350, -3252, 1529, -5741, 7075,
	6068, -1001, 4755, 5059, -6296, -145, 5609, 752, -6911, -1634, -7364, 738, 3924,
	-4191, 8475, -673, 343, 154, 1458, -6021, 7236, 996, 7371, 3113, 4025, 7955, -
	8361, 6786, 2878, -6943, 247, 6262, -1298, 8567, 967, 6780, 7422, 5239, 5652, -
	2816, -8906, 3432, 6432, -3778, 5256, -3240, 3361, -7593, -1628, -1467, 4240,
	3859, 7411, -4320, 4625, -5530, -1558, -7309, -7312, 8818, -5945, -2799, -7270,
	3945, -419, -8850, 2117, -7416, -7990, 406, 6086, -5534, -6276, 5557, -271, -
	7217, -2662, 7667, -1761, -4656, 8172, 4699, -3123, 2676, -8439, -2985, -3233,
	7508, -4518, -8271, -1697, -2635, 4055, -2328, -8181, -4493, -352, -75, -4978,
	1264, 6830, 5556, 3014, 7926, -6237, 4292, 5957, 1833, 8563, 4233, -7458, 1050,
	2523, 8045, -8908, -4616, 1465, -2792, 3042, 7442, -2380, -3664, -736, -3369, -
	4989, -1092, -797, 2781, -650, 1814, 2311, 1826, -5536, 4504, -3555, 5394, 2558,
	2574, -5518, 1099, -481, 45, -8036, -2699, 6634, -1111, 1888, -747, 8680, 6761,
	6527, 5433, 8412, 2646, -6098, -3878, -1666, 6919, 5770, 3486, -2660, -6039,
	3242, 6760, 8927, -8144, 1582, 5558, -8016, -7203, -6253, -5833, 5147, 5399,
	4285, -4923, 8983, -6646, -6213, -7816, 6032, -7630, 2123, 7133, 2186, -4891, -
	8705, 286, -4820, 6356, 7679, -3428, -6057, -13, 2226, 8464, 1970, 1700, 8566,
	2414, 5035, 4696, -2784, -229, 7694, -8133, 1719, 549, -6010, 7993, -8319, -6191,
	-6866, -6164, 8437, -5956, -1988, 4951, 4893, 4720, 8615, 7773, 2454, 244, 2876, 
	7645, 1491, -5431, -7587, 2143, 3819, 2843, 5944, -1252, -795, 1729, 6871, 3917,
	2634, -7366, -5921, 6940, 7904, 1484, -4327, -6452, 8635, -4333, 495, -7686,
	2910, -5596, -5761, 2576, -3426, 7712, 6769, 7436, 1770, 2799, -5327, 2318, 1832,
	-7174, 6076, -6099, 6855, -139, -8978, 4009, -4051, 6907, -1841, 78, 3766, 2500,
	1775, 6649, 6293, -2787, -4332, 8554, 864, 3012, -8608, -4692, 7425, 6641, -4478,
	2348, -4344, -1973, -4511, -7162, 4047, -8669, 4795, 5454, -1917, -32, 8802, -
	693, -3414, 3636, 3780, 6500, -5754, 2872, 1051, 716, -5348, 4500, 7007, -313, -
	4567, -2938, -2364, -4730, -6310, 4854, 150, -6175, -779, -8998, 5638, 3988, -
	8307, -5044, 665, -7207, 2732, 8030, 526, 4374, -3576, 2983, -2403, -8865, 5026,
	1452, -2259, -7557, 5651, -3381, 8888, 6981, -8648, 6089, -6341, 1869, 8242,
	1509, -8622, 871, -8140, -55, 6540, 5786, -3110, -924, -3305, -4267, 902, 4381,
	3045, -3795, -3387, 2475, 228, 399, 5986, -5113, -8725, -1341, -4205, 5039, -
	2440, 687, -5450, 7084, -6860, -6085, 1372, -6644, 6484, -1271, 6797, 3479, 7253,
	6567, -2541, 6608, 7595, 7760, 975};

	int longitudes[740] = {-17368, -3021, -10185, -14610, -7883, -2194, -7036, 2035,
	-5526, -10016, 13453, 10875, 5496, -15268, -13322, 5215, -10074, -17139, 2834,
	2618, -16991, -115, 6273, -2418, 5232, 10057, -17008, 13879, 6640, 15937, -14034,
	-14634, 4086, -3228, 15657, 13929, 3891, 80, 6053, -638, -14586, -9976, 15228,
	4547, -10470, -9239, 12480, 5066, -88, 14262, 16166, 4510, 16630, 16787, -11831,
	5620, 2167, 13647, -6944, 13906, 2250, -9661, -15989, -10136, -9320, 16426, -
	3611, -15047, -8792, 15160, 95, -15363, 16550, 10841, 3925, -15942, -16689,
	10578, 14134, 2453, 8340, -14638, 3657, 15023, 9695, -14195, 7593, -9981, -9477,
	-11310, -1868, -16497, 5211, -7497, -6111, -13700, 17624, -17342, -16980, -11592,
	-17205, -14480, -16895, 13525, -4325, -17454, 4772, -29, 5487, 15524, -1523,
	4813, -5271, 13396, -97, -7491, 7602, 15983, -2359, -120, -17337, -10423, 4747,
	3390, -17994, 12287, -7583, 6914, 6374, -927, -17133, 9187, 12588, -12392, 3136,
	-12120, -11391, 532, 2808, -4970, 3372, 4129, -1477, 7023, -7770, -10437, -14977,
	-16688, 6320, 3594, -3428, -11427, 12171, -6884, -11746, -6288, 4859, -1458,
	17642, 10045, -16584, 3850, 12115, 11253, 12147, -7308, -10268, 3458, -314, 4555,
	8461, 14710, 3455, -7640, -6129, 8780, 7293, -5713, 877, -16211, -5674, -1704,
	6762, 8349, -8832, -6748, -3568, -14089, -7465, 6321, 1077, -9416, -2018, 1054,
	10318, 10293, -1629, -5144, -12709, 16678, -308, 11430, -11420, -10346, 7031, -
	9043, 5791, 14973, 17636, -10433, 3502, -11467, 1563, 7970, 925, 795, 6182,
	16534, -14601, 9625, -429, -16719, 5310, -12233, -14134, 17239, -7380, -748, -
	7741, 4660, 5049, -13092, 12928, 291, -14608, 4829, 10401, -4062, 12554, 6339, -
	12463, -4793, 5088, 16840, -16889, 12967, -1496, 5109, -7032, -264, -1957, 9998,
	-3657, -4212, 5161, 10209, 14091, 3130, -787, 15398, 7325, -11168, -15157, 9735,
	-15537, -1292, 11974, -1529, 12257, -15969, -5237, -8039, 4137, -12640, 14396, -
	8998, 2876, 6696, -8482, -7797, 9165, -15962, 8679, 8753, 16806, -3653, 10966, -
	1499, -1764, 5087, 15633, 12321, 15425, 14647, 14295, 11457, -2841, -3883, -792,
	-1491, -14334, 1075, -8967, -1192, -10137, -6573, -3014, -14862, 2232, -10780, -
	16590, -13151, 11685, 1761, 17529, 13314, 14157, -8516, -3163, -14644, 9057,
	17140, 13460, -5069, 3180, 3232, 7778, 11665, -3560, -12991, 7085, 9415, 3652,
	2699, 5611, 12330, 8716, 13660, -5686, 17336, -1131, -5885, -2338, -5655, -16628,
	-15994, -14449, -6739, -11687, 14636, 3762, -3497, -3329, 8289, 8169, 1719, -
	4819, -10697, -3414, -14129, 4160, -10919, 8898, 13022, 6259, -763, 8338, 12501,
	10916, -17823, 17276, 4103, -4928, 8028, 16897, 15286, -1539, 10836, 2878, 5202,
	-11292, 7098, 2722, 187, 1429, -4814, 16420, 10747, 10525, 4161, 17436, -6439, -
	14826, 2534, -13364, -17005, -9977, 6290, -11271, -17173, 12531, 11981, 4641, -
	3004, -10669, -9822, 14251, 16609, -11583, -7330, -613, 8423, 13336, 14920, -
	14460, -13504, 13402, -15459, 15728, 7835, -10971, 9476, -7886, -1613, 2513, 
	13448, -6077, 12632, -1246, -3730, 15326, -17694, 15190, -15871, -1407, -1953, -
	13597, 1282, -8568, -11908, 13082, 2498, 12983, 12607, -9143, 16305, -13494,
	8828, -7436, 8311, 17502, 3342, 13613, -11346, -12732, -16811, 17996, -7638,
	9964, -12774, -2918, -13922, 13597, -2100, -17458, -5788, -454, 4470, -5842, -
	16536, 14308, 17703, 799, 11323, -3554, -3124, 5438, -12212, -1716, -3864, -22,
	14324, 7785, 9244, 11806, -17488, 6362, -9755, 620, -10055, -8331, 13139, -6024,
	2276, 5675, 5207, -3159, -12129, 15511, 15249, 2404, 1839, -515, -5856, 5248, -
	8309, -13847, 6282, 5363, -8535, -4158, -2678, 9690, 13708, -8457, 13675, 15928,
	-14474, 11598, 17419, -6567, 14867, -10737, 7290, 5671, -518, 8840, 8390, 12335,
	13275, 15374, 14790, -6394, -15002, -7656, 2108, -6305, -15219, 14754, -10992,
	17864, 15556, 4233, -444, 16942, -12988, 10083, 3043, 12568, -15049, -7993, 880,
	9673, 1517, 3398, 10588, 12880, 11984, 14557, -14569, 17723, 1365, -1371, -9954,
	-10033, 2775, -16821, 14248, -17929, 3079, -7782, -9035, -5100, 4704, -14043, -
	1418, -13993, 6089, -12834, -16257, 5533, 12794, 16838, -5205, 5640, 14980,
	11336, -11384, 14029, 7928, 12341, 4287, -13474, -13539, 12323, 5411, -2440, -
	5179, -142, 15257, 17358, 11762, 8260, 13405, 15920, 5242, 16407, -13470, 1723,
	16915, 6642, 1585, 2352, 10930, 13583, 3270, 1561, -15518, -2218, 11406, 8692, -
	17919, 17683, -700, -2948, 11784, 591, -8257, -12771, 4154, -13974, -13303, -
	1252, 15620, -16239, -11599, 11727, -8951, 11144, 14591, 13663, 5228, 15210, -
	9853, 16949, -4726, 913, -72, 10812, -615, 9080, -17038, 16299, 11333, -16401,
	9664, 12391, 16460, -5783, -10605, 2561, -10405, 5979, -5540, -866, 15106, -
	17724, 12001, -1392, 12398, -16427, -1707, -17595, 6300, -8776, -8110, -13264, -
	2830, -1971, 16875, 5568, 990, 16385, -7089, -2556, -16544, -6534, 4272, 4816, -
	4353, -698, 13984, -11499, -3764, -10408, -2542, 3196, 3866, -8409, 4702, -6160,
	-6772, -16125, -16476, 6551, 2135, 13605, 944, 9723, 12514, -356, 10295, -597,
	7065, 8693, -15419, 16912, 14678, -10501, 2191, -2606, -14030, 17686, 17725, -
	15244, -8424, 980, 17897, 11890, 7353, 6244, -1331, -12618, 11346, -319, -5817, -
	15872, 8514, 11466, -8386};

	int prevMenor = INT_MAX;
	vector<int> a(100), b(100);

	QuickSort(inicio, fin, latitudes);
	QuickSort(inicio, fin, longitudes);

	menorDist(prevMenor, latitudes, a, b);
	if (idx != 0) {
		cout << "Los pares con latitud mas corta son: ";
		for(int i=0; i <= idx; i++) {
			cout << a[i] << ", " << b[i] << endl;
		}
	} else {
		cout << "El par con latitud mas corta es: " << a[0] << ", " << b[0] << endl;
	}
	
	prevMenor = INT_MAX;
	idx = 0;
	menorDist(prevMenor, longitudes, a, b);
	if (idx != 0) {
		cout << "Los pares con longitud mas corta son: ";
		for(int i=0; i <= idx; i++) {
			cout << a[i] << ", " << b[i] << endl;
		}
	} else {
		cout << "El par con longitud mas corta es: " << a[0] << ", " << b[0] << endl;
	}

	cout << "El par con la latitud mas Norte Sur es: " << latitudes[0] << ", " << latitudes[739] << endl;
	cout << "El par con la longitud mas Oeste Este es: " << longitudes[0] << ", " << longitudes[739] << endl;

	return 0;
}